name: Continuous integration
on:
  push:
    branches:
      - master
      - b0.*
  pull_request:
    branches:
      - master
      - b0.*

jobs:
  test:
    name: Run checks
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        exclude:
          - os: windows-latest
            python-version: "3.10"
          - os: macos-latest
            python-version: "3.10"
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: Gr1N/setup-poetry@v8

      - run: echo "ENABLE=1"  >> $GITHUB_OUTPUT
        if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Enable extended checks
        id: extended-checks
      - run: echo "ENABLE=1" >> $GITHUB_OUTPUT
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9' }}
        name: Enable sphinx check
        id: extended-checks-sphinx

      - run: poetry install
        if: ${{ !steps.extended-checks-sphinx.outputs.ENABLE }}
      - run: poetry install -E docs
        if: ${{ steps.extended-checks-sphinx.outputs.ENABLE }}

      - run: poetry run poe tests_unit
      - run: poetry run poe checks_codestyle
      - run: poetry run poe checks_typing
        if: ${{ steps.extended-checks.outputs.ENABLE }}
      - run: poetry run poe checks_license
        if: ${{ steps.extended-checks.outputs.ENABLE }}
      - run: poetry run poe sphinx -W
        if: ${{ steps.extended-checks-sphinx.outputs.ENABLE }}
